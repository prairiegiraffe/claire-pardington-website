---
import Layout from '~/layouts/Layout.astro';
import DevComponentsSidebar from '~/components/ui/DevComponentsSidebar.astro';
import { updateCategoryCounts } from '~/lib/component-registry';

const metadata = {
  title: 'Component Library Hub — AstroWind Dev',
  description: 'Complete Tailwind UI Plus component library for AI-assisted development.',
  robots: { index: false, follow: false },
};

const categoriesWithCounts = updateCategoryCounts();
---

<Layout metadata={metadata}>
  <DevComponentsSidebar>
    <div class="container mx-auto px-4 py-8 max-w-7xl">
      <!-- Header -->
      <div class="mb-12">
        <h1 class="text-4xl font-bold text-center mb-4">Complete Component Library</h1>
        <p class="text-lg text-center text-muted max-w-4xl mx-auto">
          AI-optimized component library with all Tailwind UI Plus components organized by category. Perfect for rapid
          development and AI-assisted coding.
        </p>
      </div>

      <!-- Quick Stats -->
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-12">
        <div class="bg-white dark:bg-gray-900 rounded-lg border p-4 text-center">
          <div class="text-2xl font-bold text-primary mb-1">199</div>
          <div class="text-sm text-muted">Components</div>
        </div>
        <div class="bg-white dark:bg-gray-900 rounded-lg border p-4 text-center">
          <div class="text-2xl font-bold text-primary mb-1">{categoriesWithCounts.length}</div>
          <div class="text-sm text-muted">Categories</div>
        </div>
        <div class="bg-white dark:bg-gray-900 rounded-lg border p-4 text-center">
          <div class="text-2xl font-bold text-primary mb-1">Ready</div>
          <div class="text-sm text-muted">For AI</div>
        </div>
        <div class="bg-white dark:bg-gray-900 rounded-lg border p-4 text-center">
          <div class="text-2xl font-bold text-primary mb-1">500+</div>
          <div class="text-sm text-muted">Planned</div>
        </div>
      </div>

      <!-- Categories Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-2 gap-8">
        {
          categoriesWithCounts.map((category) => (
            <div class="bg-white dark:bg-gray-900 rounded-xl border shadow-sm">
              <div class="p-6">
                <div class="flex items-center gap-3 mb-4">
                  <div class="text-2xl">{category.icon}</div>
                  <div>
                    <h3 class="text-xl font-semibold text-primary">{category.name}</h3>
                    <p class="text-sm text-muted">{category.description}</p>
                  </div>
                </div>

                {category.subcategories && (
                  <div class="space-y-2">
                    {category.subcategories.map((sub) => {
                      const hasComponents = sub.count > 0;
                      const href = hasComponents ? `/dev-components/${sub.id}` : '#';
                      return (
                        <a
                          href={href}
                          class={`block p-3 rounded-lg border transition-all ${
                            hasComponents
                              ? 'border-gray-200 dark:border-gray-700 hover:border-primary/30 hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer'
                              : 'border-dashed border-gray-300 dark:border-gray-600 cursor-not-allowed opacity-60'
                          }`}
                        >
                          <div class="flex justify-between items-center">
                            <div>
                              <div
                                class={`font-medium ${hasComponents ? 'text-gray-900 dark:text-white' : 'text-gray-500'}`}
                              >
                                {sub.name}
                              </div>
                              <div class="text-xs text-muted">{sub.description}</div>
                            </div>
                            <div class="flex items-center gap-2">
                              <span
                                class={`text-xs px-2 py-1 rounded-full ${
                                  hasComponents
                                    ? 'bg-primary/10 text-primary'
                                    : 'bg-gray-100 dark:bg-gray-800 text-gray-500'
                                }`}
                              >
                                {sub.count} {hasComponents ? 'ready' : 'coming soon'}
                              </span>
                              {hasComponents && (
                                <svg class="w-4 h-4 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M9 5l7 7-7 7"
                                  />
                                </svg>
                              )}
                            </div>
                          </div>
                        </a>
                      );
                    })}
                  </div>
                )}
              </div>
            </div>
          ))
        }
      </div>

      <!-- AI Usage Guide -->
      <div class="mt-16 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-xl p-8">
        <h2 class="text-2xl font-bold text-center mb-6">AI Usage Guide</h2>

        <div class="grid md:grid-cols-3 gap-6">
          <div class="text-center">
            <div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4">
              <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-1.586l-4 4z"
                ></path>
              </svg>
            </div>
            <h3 class="font-semibold mb-2">Reference by ID</h3>
            <p class="text-sm text-muted">"Use the simple-hero component"</p>
          </div>

          <div class="text-center">
            <div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4">
              <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
                ></path>
              </svg>
            </div>
            <h3 class="font-semibold mb-2">Describe by Category</h3>
            <p class="text-sm text-muted">"Make a pricing section like SimplePricing"</p>
          </div>

          <div class="text-center">
            <div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4">
              <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                ></path>
              </svg>
            </div>
            <h3 class="font-semibold mb-2">Search by Tags</h3>
            <p class="text-sm text-muted">"Find all components with 'gradient' tag"</p>
          </div>
        </div>
      </div>

      <!-- Navigation -->
      <div class="mt-12 text-center">
        <a href="/styles-guide" class="inline-flex items-center text-primary hover:text-primary/80 font-medium">
          ← Back to Styles Guide
        </a>
      </div>
    </div>
  </DevComponentsSidebar>
</Layout>
